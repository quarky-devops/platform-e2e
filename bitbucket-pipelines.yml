image: node:18

definitions:
  services:
    docker:
      memory: 4096

pipelines:
  branches:
    main:
      - step:
          name: "Deploy QuarkfinAI to AWS"
          deployment: production
          script:
            - echo "Starting QuarkfinAI deployment..."
            - apt-get update && apt-get install -y wget unzip jq
            - npm install -g aws-cdk@2.100.0
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - ./aws/install
            - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            - aws configure set region $AWS_DEFAULT_REGION
            - aws sts get-caller-identity
            - cd infrastructure
            - npm install
            - npm run build
            - export JSII_SILENCE_WARNING_UNTESTED_NODE_VERSION=1
            - cdk bootstrap --require-approval never || echo "Already bootstrapped"
            - echo "Deploying VPC..."
            - cdk deploy QuarkfinVpcStack --require-approval never
            - echo "Deploying Security..."
            - cdk deploy QuarkfinSecurityStack --require-approval never
            - echo "Deploying Auth..."
            - cdk deploy QuarkfinAuthStack --require-approval never
            - echo "Deploying Database..."
            - cdk deploy QuarkfinDatabaseStack --require-approval never
            - echo "Deploying App..."
            - cdk deploy QuarkfinAppStack --require-approval never
            - echo "Deploying CDN..."
            - cdk deploy QuarkfinCdnStack --require-approval never
            - export CDN_DOMAIN=$(aws cloudformation describe-stacks --stack-name QuarkfinCdnStack --query 'Stacks[0].Outputs[?OutputKey==`DistributionDomainName`].OutputValue' --output text)
            - export ALB_DNS=$(aws cloudformation describe-stacks --stack-name QuarkfinAppStack --query 'Stacks[0].Outputs[?OutputKey==`LoadBalancerDNS`].OutputValue' --output text)
            - export USER_POOL_ID=$(aws cloudformation describe-stacks --stack-name QuarkfinAuthStack --query 'Stacks[0].Outputs[?OutputKey==`UserPoolId`].OutputValue' --output text)
            - export CLIENT_ID=$(aws cloudformation describe-stacks --stack-name QuarkfinAuthStack --query 'Stacks[0].Outputs[?OutputKey==`UserPoolClientId`].OutputValue' --output text)
            - cd ../frontend
            - export NEXT_PUBLIC_AWS_REGION=$AWS_DEFAULT_REGION
            - export NEXT_PUBLIC_COGNITO_USER_POOL_ID=$USER_POOL_ID
            - export NEXT_PUBLIC_COGNITO_CLIENT_ID=$CLIENT_ID
            - npm install
            - npm run build
            - cd ../go_backend
            - go build -o quarkfin-backend .
            - echo "Deployment completed successfully!"
            - echo "Frontend URL - https://$CDN_DOMAIN"
            - echo "API URL - https://$CDN_DOMAIN/api"
            - echo "Load Balancer - http://$ALB_DNS"
            - echo "Point app.quarkfin.ai CNAME to $CDN_DOMAIN"

  default:
    - step:
        name: "Build & Test"
        script:
          - echo "Building QuarkfinAI platform..."
          - cd frontend && npm install && npm run build
          - cd ../go_backend && go build -o quarkfin-backend .
          - echo "Build completed successfully"
